{"version":3,"sources":["webpack:///scripts/site-bundle.js","webpack:///webpack/bootstrap 13838b809934d3329ab1","webpack:///./~/@squarespace/core/dist/ImageLoader.js","webpack:///./~/@squarespace/core/dist/Lifecycle.js","webpack:///./~/@squarespace/core/dist/Tweak.js","webpack:///./~/@squarespace/core/dist/index.js","webpack:///./scripts/site.js"],"names":["modules","installedModules","__webpack_require__","moduleId","exports","module","id","loaded","call","m","c","p","Object","defineProperty","value","ImageLoader","load","img","config","window","default","Lifecycle","init","Squarespace","AFTER_BODY_LOADED","afterBodyLoad","destroy","globalDestroy","Y","tweaksToWatch","all","callbacks","Tweak","getValue","name","console","error","Template","getTweakValue","watch","_arguments","arguments","length","push","tweakName","constructor","Array","forEach","Global","on","e","getName","callbackSignature","callback","err","_ImageLoader","_ImageLoader2","_interopRequireDefault","_Lifecycle","_Lifecycle2","_Tweak","_Tweak2","obj","__esModule","SQS","core","addEventListener","images","document","querySelectorAll","i"],"mappings":"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","file":"scripts/site-bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(5);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * ​Squarespace comes with a number of built-in facilities for managing images\n\t * that are uploaded to our system. After uploading an image into a collection,\n\t * Squarespace automatically creates multiple copies of the image with different \n\t * sizes. Our ImageLoader will then help render images properly when they are\n\t * presented on a page, even on retina displays.\n\t *\n\t * ImageLoader can also be used to fit or fill an image inside ​a parent\n\t * container, where it automatically determines which image size to use\n\t * depending on the current dimensions of the container.\n\t *\n\t * WARNING:\n\t * Currently, ImageLoader is present on all Squarespace sites under the global\n\t * namespace ImageLoader, but this is an unsupported API and we recommend\n\t * accessing this functionality through squarespace-core.\n\t *\n\t * @namespace ImageLoader\n\t */\n\tvar ImageLoader = {\n\t\n\t  /**\n\t   * Using the global ImageLoader namespace, calls ImageLoader.load on the\n\t   * given node with the given config options.\n\t   *\n\t   * @method load\n\t   * @param  {HTMLElement} img    Image node to be loaded\n\t   * @param  {Object} config      Config object\n\t   * @return {Boolean}            True if the image was loaded, false otherwise\n\t   */\n\t  load: function load(img, config) {\n\t    return window.ImageLoader.load(img, config);\n\t  }\n\t};\n\t\n\t/**\n\t * @exports {Object} ImageLoader\n\t */\n\texports.default = ImageLoader;\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * Squarespace provides default functionality for some content that users add\n\t * in the CMS.\n\t *\n\t * If you are building a Developer Platform site that loads Squarespace content\n\t * through an XHR or some other kind of AJAX, you can use the Lifecycle methods\n\t * provided here to initialize and/or destroy this functionality.\n\t *\n\t * WARNING:\n\t * The functionality called by Lifecycle is available on the global namespace\n\t * window.Squarespace, but this is an unsupported API and it is highly\n\t * recommended that you access it through squarespace-core.\n\t *\n\t * @namespace Lifecycle\n\t */\n\tvar Lifecycle = {\n\t\n\t  /**\n\t   * Squarespace.afterBodyLoad() trigger loads scripts and calls onInitialize,\n\t   * which individual modules' init functions are bound to. This should be\n\t   * called after new HTML content containing Squarespace default functionality\n\t   * is added to a page (for example, after AJAX loading a new page).\n\t   *\n\t   * @method init\n\t   */\n\t  init: function init() {\n\t    window.Squarespace.AFTER_BODY_LOADED = false;\n\t    window.Squarespace.afterBodyLoad();\n\t  },\n\t\n\t\n\t  /**\n\t   * Squarespace.globalDestroy calls onDestroy, triggering each module's\n\t   * destructor. This should be called prior to loading in new HTML content\n\t   * containing Squarespace default functionality.\n\t   *\n\t   * @method  destroy\n\t   */\n\t  destroy: function destroy() {\n\t    window.Squarespace.globalDestroy(Y);\n\t  }\n\t};\n\t\n\t/**\n\t * @exports {Object} Lifecycle\n\t */\n\texports.default = Lifecycle;\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * @const {Object} tweaksToWatch\n\t */\n\tvar tweaksToWatch = {\n\t  all: {\n\t    callbacks: []\n\t  }\n\t};\n\t\n\t/**\n\t * Tweaks allow a developer to isolate specific elements of the design and\n\t * present options to the user in an easy-to-use interface. Tweaks are surfaced\n\t * in the Squarespace interface through Style Editor (e.g.\n\t * yoursite.squarespace.com/config/design/style). Using tweaks, a user can make\n\t * presentational changes to their website without having to know or edit CSS code.\n\t *\n\t * Tweaks are typically used by the developers through LESS variables, mixins,\n\t * and class names added to the <body> element.\n\t * \n\t * Sometimes, a developer may find it necessary to access the value of a tweak\n\t * through Javascript, or to watch for changes in that tweak and update the DOM\n\t * accordingly. The Tweak module of squarespace-core is meant to provide an\n\t * official interface for doing so.\n\t *\n\t * @namespace Tweak\n\t */\n\tvar Tweak = {\n\t\n\t  /**\n\t   * Gets the value of one of the tweaks given its name.\n\t   *\n\t   * @method getValue\n\t   * @param {String} name      Name of the tweak\n\t   * @returns {String}         The value of the tweak\n\t   */\n\t  getValue: function getValue(name) {\n\t    if (!name || typeof name !== 'string') {\n\t      console.error('squarespace-core: Invalid tweak name ' + name);\n\t      return null;\n\t    }\n\t\n\t    return Y.Squarespace.Template.getTweakValue(name);\n\t  },\n\t\n\t\n\t  /**\n\t   * Listen for changes on a tweak item. If one parameter is provided, the\n\t   * callback will be executed every time any tweak changes. If two parameters\n\t   * are provided and the first parameter is a String, the callback will be\n\t   * executed only when that particular tweak changes. If two parameters are\n\t   * provided and the first parameter is an Array of strings, the callback will\n\t   * be executed any time one of those tweaks changes.\n\t   *\n\t   * @method watch\n\t   * @param {String}          Optional: Name of the tweak\n\t   * @param {Array}           Optional: Array with multiple tweak names\n\t   * @param {Function}        Callback to call when watcher is triggered\n\t   */\n\t  watch: function watch() {\n\t    var _arguments = arguments;\n\t\n\t    if (arguments.length === 0) {\n\t      console.error('squarespace-core: ' + 'Tweak.watch must be called with at least one parameter');\n\t      return;\n\t    }\n\t\n\t    if (arguments.length === 1) {\n\t      // Only callback passed in, no tweak name string or tweaks array passed.\n\t      // Run callback for all tweaks.\n\t      if (typeof arguments[0] === 'function') {\n\t        tweaksToWatch.all.callbacks.push(arguments[0]);\n\t      }\n\t      return;\n\t    }\n\t\n\t    if (typeof arguments[0] === 'string' && typeof arguments[1] === 'function') {\n\t      // Specific tweak name passed in. Run callback when that tweak is changed.\n\t      var tweakName = arguments[0];\n\t      if (!tweaksToWatch[tweakName]) {\n\t        tweaksToWatch[tweakName] = {\n\t          callbacks: []\n\t        };\n\t      }\n\t      tweaksToWatch[tweakName].callbacks.push(arguments[1]);\n\t    } else if (arguments[0].constructor === Array && typeof arguments[1] === 'function') {\n\t      // Multiple tweak names passed in as array. Run callback when any one of\n\t      // those tweaks are changed.\n\t      arguments[0].forEach(function (tweakName) {\n\t        if (!tweaksToWatch[tweakName]) {\n\t          tweaksToWatch[tweakName] = {\n\t            callbacks: []\n\t          };\n\t        }\n\t        tweaksToWatch[tweakName].callbacks.push(_arguments[1]);\n\t      });\n\t    }\n\t  }\n\t};\n\t\n\tif (window.Y.Global) {\n\t  // If Y.Global is present on the page, set up the tweak event listener.\n\t  window.Y.Global.on('tweak:change', function (e) {\n\t    var tweakName = e.getName();\n\t    var callbackSignature = {\n\t      name: tweakName,\n\t      value: e.config && e.config.value || e.value\n\t    };\n\t\n\t    if (tweaksToWatch[tweakName]) {\n\t      tweaksToWatch[tweakName].callbacks.forEach(function (callback) {\n\t        try {\n\t          callback(callbackSignature);\n\t        } catch (err) {\n\t          console.error(err);\n\t        }\n\t      });\n\t    }\n\t\n\t    if (tweaksToWatch.all.callbacks.length > 0) {\n\t      tweaksToWatch.all.callbacks.forEach(function (callback) {\n\t        try {\n\t          callback(callbackSignature);\n\t        } catch (err) {\n\t          console.error(err);\n\t        }\n\t      });\n\t    }\n\t  });\n\t}\n\t\n\t/**\n\t * @exports {Object} Tweak\n\t */\n\texports.default = Tweak;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _ImageLoader = __webpack_require__(1);\n\t\n\tvar _ImageLoader2 = _interopRequireDefault(_ImageLoader);\n\t\n\tvar _Lifecycle = __webpack_require__(2);\n\t\n\tvar _Lifecycle2 = _interopRequireDefault(_Lifecycle);\n\t\n\tvar _Tweak = __webpack_require__(3);\n\t\n\tvar _Tweak2 = _interopRequireDefault(_Tweak);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * The public JavaScript API for Squarespace template developers.\n\t * @namespace SQS\n\t */\n\tvar SQS = {\n\t  ImageLoader: _ImageLoader2.default,\n\t  Lifecycle: _Lifecycle2.default,\n\t  Tweak: _Tweak2.default\n\t};\n\t\n\texports.default = SQS;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\r\n\t// Use the sqs-core module to access core Squarespace\r\n\t// functionality, like Lifecycle and ImageLoader. For\r\n\t// full documentation, go to:\r\n\t//\r\n\t// http://github.com/squarespace/squarespace-core\r\n\t\r\n\tvar core = __webpack_require__(4);\r\n\t\r\n\twindow.addEventListener('DOMContentLoaded', function() {\r\n\t\r\n\t  var images = document.querySelectorAll('img[data-src]');\r\n\t\r\n\t  for (var i = 0; i < images.length; i++) {\r\n\t    core.ImageLoader.load(images[i], {\r\n\t      load: true\r\n\t    });\r\n\t  }\r\n\t\r\n\t});\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// scripts/site-bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 13838b809934d3329ab1","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * ​Squarespace comes with a number of built-in facilities for managing images\n * that are uploaded to our system. After uploading an image into a collection,\n * Squarespace automatically creates multiple copies of the image with different \n * sizes. Our ImageLoader will then help render images properly when they are\n * presented on a page, even on retina displays.\n *\n * ImageLoader can also be used to fit or fill an image inside ​a parent\n * container, where it automatically determines which image size to use\n * depending on the current dimensions of the container.\n *\n * WARNING:\n * Currently, ImageLoader is present on all Squarespace sites under the global\n * namespace ImageLoader, but this is an unsupported API and we recommend\n * accessing this functionality through squarespace-core.\n *\n * @namespace ImageLoader\n */\nvar ImageLoader = {\n\n  /**\n   * Using the global ImageLoader namespace, calls ImageLoader.load on the\n   * given node with the given config options.\n   *\n   * @method load\n   * @param  {HTMLElement} img    Image node to be loaded\n   * @param  {Object} config      Config object\n   * @return {Boolean}            True if the image was loaded, false otherwise\n   */\n  load: function load(img, config) {\n    return window.ImageLoader.load(img, config);\n  }\n};\n\n/**\n * @exports {Object} ImageLoader\n */\nexports.default = ImageLoader;\nmodule.exports = exports[\"default\"];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@squarespace/core/dist/ImageLoader.js\n// module id = 1\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Squarespace provides default functionality for some content that users add\n * in the CMS.\n *\n * If you are building a Developer Platform site that loads Squarespace content\n * through an XHR or some other kind of AJAX, you can use the Lifecycle methods\n * provided here to initialize and/or destroy this functionality.\n *\n * WARNING:\n * The functionality called by Lifecycle is available on the global namespace\n * window.Squarespace, but this is an unsupported API and it is highly\n * recommended that you access it through squarespace-core.\n *\n * @namespace Lifecycle\n */\nvar Lifecycle = {\n\n  /**\n   * Squarespace.afterBodyLoad() trigger loads scripts and calls onInitialize,\n   * which individual modules' init functions are bound to. This should be\n   * called after new HTML content containing Squarespace default functionality\n   * is added to a page (for example, after AJAX loading a new page).\n   *\n   * @method init\n   */\n  init: function init() {\n    window.Squarespace.AFTER_BODY_LOADED = false;\n    window.Squarespace.afterBodyLoad();\n  },\n\n\n  /**\n   * Squarespace.globalDestroy calls onDestroy, triggering each module's\n   * destructor. This should be called prior to loading in new HTML content\n   * containing Squarespace default functionality.\n   *\n   * @method  destroy\n   */\n  destroy: function destroy() {\n    window.Squarespace.globalDestroy(Y);\n  }\n};\n\n/**\n * @exports {Object} Lifecycle\n */\nexports.default = Lifecycle;\nmodule.exports = exports[\"default\"];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@squarespace/core/dist/Lifecycle.js\n// module id = 2\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * @const {Object} tweaksToWatch\n */\nvar tweaksToWatch = {\n  all: {\n    callbacks: []\n  }\n};\n\n/**\n * Tweaks allow a developer to isolate specific elements of the design and\n * present options to the user in an easy-to-use interface. Tweaks are surfaced\n * in the Squarespace interface through Style Editor (e.g.\n * yoursite.squarespace.com/config/design/style). Using tweaks, a user can make\n * presentational changes to their website without having to know or edit CSS code.\n *\n * Tweaks are typically used by the developers through LESS variables, mixins,\n * and class names added to the <body> element.\n * \n * Sometimes, a developer may find it necessary to access the value of a tweak\n * through Javascript, or to watch for changes in that tweak and update the DOM\n * accordingly. The Tweak module of squarespace-core is meant to provide an\n * official interface for doing so.\n *\n * @namespace Tweak\n */\nvar Tweak = {\n\n  /**\n   * Gets the value of one of the tweaks given its name.\n   *\n   * @method getValue\n   * @param {String} name      Name of the tweak\n   * @returns {String}         The value of the tweak\n   */\n  getValue: function getValue(name) {\n    if (!name || typeof name !== 'string') {\n      console.error('squarespace-core: Invalid tweak name ' + name);\n      return null;\n    }\n\n    return Y.Squarespace.Template.getTweakValue(name);\n  },\n\n\n  /**\n   * Listen for changes on a tweak item. If one parameter is provided, the\n   * callback will be executed every time any tweak changes. If two parameters\n   * are provided and the first parameter is a String, the callback will be\n   * executed only when that particular tweak changes. If two parameters are\n   * provided and the first parameter is an Array of strings, the callback will\n   * be executed any time one of those tweaks changes.\n   *\n   * @method watch\n   * @param {String}          Optional: Name of the tweak\n   * @param {Array}           Optional: Array with multiple tweak names\n   * @param {Function}        Callback to call when watcher is triggered\n   */\n  watch: function watch() {\n    var _arguments = arguments;\n\n    if (arguments.length === 0) {\n      console.error('squarespace-core: ' + 'Tweak.watch must be called with at least one parameter');\n      return;\n    }\n\n    if (arguments.length === 1) {\n      // Only callback passed in, no tweak name string or tweaks array passed.\n      // Run callback for all tweaks.\n      if (typeof arguments[0] === 'function') {\n        tweaksToWatch.all.callbacks.push(arguments[0]);\n      }\n      return;\n    }\n\n    if (typeof arguments[0] === 'string' && typeof arguments[1] === 'function') {\n      // Specific tweak name passed in. Run callback when that tweak is changed.\n      var tweakName = arguments[0];\n      if (!tweaksToWatch[tweakName]) {\n        tweaksToWatch[tweakName] = {\n          callbacks: []\n        };\n      }\n      tweaksToWatch[tweakName].callbacks.push(arguments[1]);\n    } else if (arguments[0].constructor === Array && typeof arguments[1] === 'function') {\n      // Multiple tweak names passed in as array. Run callback when any one of\n      // those tweaks are changed.\n      arguments[0].forEach(function (tweakName) {\n        if (!tweaksToWatch[tweakName]) {\n          tweaksToWatch[tweakName] = {\n            callbacks: []\n          };\n        }\n        tweaksToWatch[tweakName].callbacks.push(_arguments[1]);\n      });\n    }\n  }\n};\n\nif (window.Y.Global) {\n  // If Y.Global is present on the page, set up the tweak event listener.\n  window.Y.Global.on('tweak:change', function (e) {\n    var tweakName = e.getName();\n    var callbackSignature = {\n      name: tweakName,\n      value: e.config && e.config.value || e.value\n    };\n\n    if (tweaksToWatch[tweakName]) {\n      tweaksToWatch[tweakName].callbacks.forEach(function (callback) {\n        try {\n          callback(callbackSignature);\n        } catch (err) {\n          console.error(err);\n        }\n      });\n    }\n\n    if (tweaksToWatch.all.callbacks.length > 0) {\n      tweaksToWatch.all.callbacks.forEach(function (callback) {\n        try {\n          callback(callbackSignature);\n        } catch (err) {\n          console.error(err);\n        }\n      });\n    }\n  });\n}\n\n/**\n * @exports {Object} Tweak\n */\nexports.default = Tweak;\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@squarespace/core/dist/Tweak.js\n// module id = 3\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ImageLoader = require('./ImageLoader');\n\nvar _ImageLoader2 = _interopRequireDefault(_ImageLoader);\n\nvar _Lifecycle = require('./Lifecycle');\n\nvar _Lifecycle2 = _interopRequireDefault(_Lifecycle);\n\nvar _Tweak = require('./Tweak');\n\nvar _Tweak2 = _interopRequireDefault(_Tweak);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The public JavaScript API for Squarespace template developers.\n * @namespace SQS\n */\nvar SQS = {\n  ImageLoader: _ImageLoader2.default,\n  Lifecycle: _Lifecycle2.default,\n  Tweak: _Tweak2.default\n};\n\nexports.default = SQS;\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@squarespace/core/dist/index.js\n// module id = 4\n// module chunks = 0","\r\n// Use the sqs-core module to access core Squarespace\r\n// functionality, like Lifecycle and ImageLoader. For\r\n// full documentation, go to:\r\n//\r\n// http://github.com/squarespace/squarespace-core\r\n\r\nvar core = require('@squarespace/core');\r\n\r\nwindow.addEventListener('DOMContentLoaded', function() {\r\n\r\n  var images = document.querySelectorAll('img[data-src]');\r\n\r\n  for (var i = 0; i < images.length; i++) {\r\n    core.ImageLoader.load(images[i], {\r\n      load: true\r\n    });\r\n  }\r\n\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/site.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}